apiVersion: apps/v1
kind: Deployment
metadata:
  name: ledgergw-userdev
spec:
  replicas: 1
  strategy:
    type: Recreate  
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-{{namespace}}-ledgergw-userdev
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-{{namespace}}-ledgergw-userdev	
    spec:
      initContainers:
          - name: file-permission-container
            image: busybox
            command: ["sh", "-c", "mkdir -p /mnt/storage/data; mkdir -p /mnt/storage/container; mkdir -p /app/logs ; chown -R 200000:20000 /mnt/storage/; "]              
            volumeMounts:
              - name: ledgergw-userdev
                mountPath: /mnt/storage/
            securityContext:
              runAsUser: 0 # Run as root user
              allowPrivilegeEscalation: true
      containers:
        - env:
          envFrom:
            - secretRef:
                name: {{system}}-{{namespace}}-userdev
                optional: false                  
          name: ledgergw-userdev
          image: dbcawa/docker_app_dev:ledger_dev_latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: tcp8080
              protocol: TCP
          stdin: true          
          tty: true     
          volumeMounts:
            - mountPath: /data/
              name: ledgergw-userdev
              subPath: data                  
            - mountPath: /home/container/
              name: ledgergw-userdev
              subPath: container  
            - mountPath: /app/logs/
              name: ledgergw-userdev
              subPath: logs                 
          workingDir: /data/data/projects/ledger/
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 2Gi          
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL          
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true          
            runAsUser: 5000 
      volumes:
        - name:  ledgergw-userdev
          persistentVolumeClaim:
            claimName: ledgergw-userdev
            
